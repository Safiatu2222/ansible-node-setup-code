pipeline {
    agent any
    tools {
        maven 'M2_HOME'
    }
    stages {
        stage('SonarQube Scan') {
           agent {docker { image 'maven:3-amazoncorretto-17-debian' }}
            steps {
                withSonarQubeEnv('sonarserver') {
                    sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Safiatu2222_week16-geo-code'
                }
            }
        }

        stage('all maven commands') {
            steps {
                sh 'mvn clean package test install compile'
            }
        }

        stage('upload artifact') {
            steps {
                sh 'curl -u admin:AP486uDG1xZsvSDmocmShUVidvE -T \
                    target/bio*.jar \
                    "http://44.204.11.51:8081/artifactory/geoapp/"'
            }
        }

        stage('image build') {
            steps {
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 259980535322.dkr.ecr.us-east-1.amazonaws.com'
                sh 'docker build -t geoapp .'
            }
        }

        stage('push image') {
            steps {
                sh 'docker tag geoapp:latest 259980535322.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'
                sh 'docker push 259980535322.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'
            }
        }
    }
}
